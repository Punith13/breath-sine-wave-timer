#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

/* Main app container - Mobile-first responsive layout */
.app-container {
  display: grid;
  grid-template-rows: 1fr auto;
  grid-template-areas: 
    "canvas"
    "controls";
  align-items: center;
  justify-items: center;
  min-height: 100vh;
  min-height: 100dvh; /* Dynamic viewport height for mobile */
  width: 100%;
  gap: var(--spacing-lg);
  padding: var(--spacing-md);
  
  /* Ensure proper spacing on mobile with safe area support */
  padding-top: var(--safe-spacing-top);
  padding-bottom: var(--safe-spacing-bottom);
  padding-left: var(--safe-spacing-left);
  padding-right: var(--safe-spacing-right);
}

/* Canvas container for grid positioning */
.app-container canvas {
  grid-area: canvas;
  width: 100%;
  max-width: var(--canvas-max-width);
  height: auto;
  border-radius: var(--border-radius);
  
  /* Prevent mobile browser behaviors on canvas */
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: transparent;
  touch-action: none;
  
  /* Prevent context menu on long press */
  -webkit-context-menu: none;
  context-menu: none;
  
  /* Prevent image saving gestures */
  -webkit-user-drag: none;
  -khtml-user-drag: none;
  -moz-user-drag: none;
  user-drag: none;
}

/* Mobile-friendly controls container */
.controls-container {
  grid-area: controls;
  width: 100%;
  max-width: 400px;
  display: flex;
  flex-direction: column;
  gap: var(--spacing-lg);
  padding: var(--spacing-sm) var(--spacing-md);
  
  /* Ensure controls don't get too close to screen edges */
  margin-left: var(--spacing-sm);
  margin-right: var(--spacing-sm);
  
  /* Prevent unwanted mobile behaviors on controls */
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
  -webkit-touch-callout: none;
  touch-action: manipulation;
  
  /* Prevent overscroll within controls */
  overscroll-behavior: contain;
}

/* Tablet adjustments (768px and up) */
@media (min-width: 768px) {
  .app-container {
    gap: var(--spacing-xl);
    padding: var(--spacing-lg);
    grid-template-rows: 1fr auto;
  }
  
  .controls-container {
    max-width: 500px;
    gap: var(--spacing-xl);
    padding: var(--spacing-md) var(--spacing-lg);
    margin-left: var(--spacing-md);
    margin-right: var(--spacing-md);
  }
}

/* Desktop adjustments (1024px and up) */
@media (min-width: 1024px) {
  .app-container {
    gap: var(--spacing-xxl);
    padding: var(--spacing-xl);
  }
  
  .controls-container {
    max-width: 600px;
    gap: var(--spacing-xxl);
  }
}

/* Large desktop adjustments (1280px and up) */
@media (min-width: 1280px) {
  .app-container {
    max-width: 1280px;
    margin: 0 auto;
  }
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}
/* Landscape orientation handling for mobile devices */
@media (max-width: 767px) and (orientation: landscape) {
  .app-container {
    grid-template-columns: 1fr auto;
    grid-template-rows: 1fr;
    grid-template-areas: "canvas controls";
    gap: var(--spacing-md);
    padding: var(--spacing-sm);
    
    /* Adjust for landscape safe areas */
    padding-left: max(var(--spacing-sm), var(--safe-area-inset-left));
    padding-right: max(var(--spacing-sm), var(--safe-area-inset-right));
    padding-top: max(var(--spacing-xs), var(--safe-area-inset-top));
    padding-bottom: max(var(--spacing-xs), var(--safe-area-inset-bottom));
  }
  
  .app-container canvas {
    width: auto;
    height: 100%;
    max-height: calc(100vh - var(--spacing-md));
    max-height: calc(100dvh - var(--spacing-md));
  }
  
  .controls-container {
    width: auto;
    min-width: 200px;
    max-width: 250px;
    height: 100%;
    justify-content: center;
    gap: var(--spacing-sm);
    padding: var(--spacing-xs) var(--spacing-sm);
    margin: 0;
  }
}

/* Tablet landscape adjustments */
@media (min-width: 768px) and (max-width: 1023px) and (orientation: landscape) {
  .app-container {
    grid-template-columns: 1fr auto;
    grid-template-rows: 1fr;
    grid-template-areas: "canvas controls";
    gap: var(--spacing-lg);
  }
  
  .controls-container {
    min-width: 280px;
    max-width: 320px;
    height: 100%;
    justify-content: center;
  }
}

/* Very small mobile screens (portrait) */
@media (max-width: 480px) and (orientation: portrait) {
  .app-container {
    gap: var(--spacing-md);
    padding: var(--spacing-sm);
  }
  
  .controls-container {
    max-width: 100%;
    gap: var(--spacing-md);
    padding: var(--spacing-xs) var(--spacing-sm);
  }
}

/* Very small mobile screens (landscape) - compact layout */
@media (max-width: 640px) and (orientation: landscape) and (max-height: 480px) {
  .app-container {
    gap: var(--spacing-sm);
    padding: var(--spacing-xs);
  }
  
  .controls-container {
    min-width: 180px;
    max-width: 200px;
    gap: var(--spacing-xs);
    padding: var(--spacing-xs);
  }
}

/* Smooth transitions for orientation changes */
.app-container {
  transition: grid-template-columns var(--transition-normal),
              grid-template-rows var(--transition-normal),
              gap var(--transition-normal),
              padding var(--transition-normal);
}

.app-container canvas {
  transition: width var(--transition-normal),
              height var(--transition-normal),
              max-width var(--transition-normal),
              max-height var(--transition-normal);
}

.controls-container {
  transition: width var(--transition-normal),
              max-width var(--transition-normal),
              min-width var(--transition-normal),
              gap var(--transition-normal),
              padding var(--transition-normal);
}

/* Prevent transitions during initial load */
.app-container.no-transition,
.app-container.no-transition *,
.app-container.no-transition *:before,
.app-container.no-transition *:after {
  transition-delay: 0s !important;
  transition-duration: 0s !important;
  animation-delay: -0.0001s !important;
  animation-duration: 0s !important;
  animation-play-state: paused !important;
}

/* Orientation change indicator (subtle visual feedback) */
@media (max-width: 767px) {
  .app-container::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(90deg, #646cff, transparent);
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
    z-index: 1000;
  }
  
  /* Show indicator briefly during orientation changes */
  .app-container.orientation-changing::before {
    opacity: 1;
  }
}

/* Ensure proper stacking context for canvas and controls */
.app-container canvas {
  position: relative;
  z-index: 1;
}

.controls-container {
  position: relative;
  z-index: 2;
}

/* Additional safe area handling for specific device configurations */

/* iPhone X and newer with notch - portrait */
@supports (padding: max(0px)) {
  .app-container {
    /* Ensure content doesn't get hidden behind the notch */
    padding-top: max(var(--spacing-md), env(safe-area-inset-top, 0));
    padding-bottom: max(var(--spacing-md), env(safe-area-inset-bottom, 0));
  }
}

/* iPhone X and newer with notch - landscape */
@media (orientation: landscape) and (max-height: 500px) {
  .app-container {
    /* Handle landscape notch positioning */
    padding-left: max(var(--spacing-lg), env(safe-area-inset-left, 0));
    padding-right: max(var(--spacing-lg), env(safe-area-inset-right, 0));
    padding-top: max(var(--spacing-xs), env(safe-area-inset-top, 0));
    padding-bottom: max(var(--spacing-xs), env(safe-area-inset-bottom, 0));
  }
}

/* Android devices with display cutouts */
@media (max-width: 767px) {
  .app-container canvas {
    /* Ensure canvas doesn't get clipped by display cutouts */
    margin-left: max(var(--spacing-xs), env(safe-area-inset-left, 0));
    margin-right: max(var(--spacing-xs), env(safe-area-inset-right, 0));
  }
}

/* Devices with bottom home indicator (iPhone X+) */
@media (max-width: 767px) and (orientation: portrait) {
  .controls-container {
    /* Add extra padding above home indicator */
    padding-bottom: max(var(--spacing-lg), calc(env(safe-area-inset-bottom, 0) + var(--spacing-sm)));
  }
}

/* Foldable devices and unusual aspect ratios */
@media (min-aspect-ratio: 2/1) {
  .app-container {
    /* Handle ultra-wide displays */
    max-width: min(100vw, 1400px);
    margin: 0 auto;
    padding-left: max(var(--spacing-xl), env(safe-area-inset-left, 0));
    padding-right: max(var(--spacing-xl), env(safe-area-inset-right, 0));
  }
}

/* Very tall displays (like unfolded Samsung Galaxy Fold) */
@media (max-aspect-ratio: 1/2) {
  .app-container {
    /* Optimize for very tall displays */
    gap: var(--spacing-xl);
    padding-top: max(var(--spacing-xl), env(safe-area-inset-top, 0));
    padding-bottom: max(var(--spacing-xl), env(safe-area-inset-bottom, 0));
  }
}

/* Additional mobile browser behavior prevention */

/* Prevent iOS Safari rubber band scrolling */
@supports (-webkit-overflow-scrolling: touch) {
  .app-container {
    -webkit-overflow-scrolling: auto;
    overscroll-behavior: none;
  }
}

/* Prevent Android Chrome overscroll glow */
@media (max-width: 767px) {
  html {
    overscroll-behavior-y: none;
  }
  
  body {
    overscroll-behavior-y: none;
    /* Prevent pull-to-refresh */
    touch-action: pan-x pan-y;
  }
}

/* Prevent text selection during touch interactions */
.app-container.orientation-changing,
.app-container.orientation-changing * {
  -webkit-user-select: none !important;
  -moz-user-select: none !important;
  user-select: none !important;
}

/* Prevent zoom on input focus (iOS Safari) */
@media (max-width: 767px) {
  input[type="range"] {
    font-size: 16px; /* Prevent zoom on focus */
  }
}

/* Prevent context menu on long press for all interactive elements */
button,
input,
canvas,
.mobile-slider,
.mobile-button {
  -webkit-context-menu: none;
  context-menu: none;
}

/* Prevent image drag behaviors on canvas */
canvas {
  -webkit-user-drag: none;
  -khtml-user-drag: none;
  -moz-user-drag: none;
  -o-user-drag: none;
  user-drag: none;
  
  /* Prevent right-click context menu */
  -webkit-context-menu: none;
  context-menu: none;
}

/* Prevent text cursor on non-text elements */
.app-container,
.controls-container,
canvas,
button {
  cursor: default;
}

/* Specific iOS Safari fixes */
@supports (-webkit-appearance: none) {
  /* Prevent iOS Safari from adding rounded corners to inputs */
  input[type="range"] {
    -webkit-appearance: none;
    border-radius: 0;
  }
  
  /* Prevent iOS Safari button styling */
  button {
    -webkit-appearance: none;
  }
}

/* Prevent selection on rapid taps */
@media (pointer: coarse) {
  * {
    -webkit-tap-highlight-color: transparent;
    -webkit-touch-callout: none;
  }
}